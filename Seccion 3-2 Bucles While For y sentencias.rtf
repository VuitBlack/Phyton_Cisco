BUCLE WHILE repite la ejecución siempre que la condición se evalúe como True.
es importante saber:
    si deseas ejecutar más de una sentencia dentro de un while, debes (como con if) poner sangría a todas las instrucciones de la misma manera.
    una instrucción o conjunto de instrucciones ejecutadas dentro del while se llama el cuerpo del bucle.
    si la condición es False (igual a cero) tan pronto como se compruebe por primera vez, el cuerpo no se ejecuta ni una sola vez (ten en cuenta la analogía de no tener que hacer nada si no hay nada que hacer).
    el cuerpo debe poder cambiar el valor de la condición, porque si la condición es True al principio, el cuerpo podría funcionar continuamente hasta el infinito. Observa que hacer una cosa generalmente disminuye la cantidad de cosas por hacer.

BUCLE FOR
En realidad, el bucle for está diseñado para realizar tareas más complicadas, puede "explorar" grandes colecciones de datos elemento por elemento. Te mostraremos como hacerlo pronto, pero ahora presentaremos una variante más sencilla de su aplicación.
La palabra reservada for abre el bucle for; nota - No hay condición después de eso; no tienes que pensar en las condiciones, ya que se verifican internamente, sin ninguna intervención.
Cualquier variable después de la palabra reservada for es la variable de control del bucle; cuenta los giros del bucle y lo hace automáticamente.
La palabra reservada in introduce un elemento de sintaxis que describe el rango de valores posibles que se asignan a la variable de control.
La función range() (esta es una función muy especial) es responsable de generar todos los valores deseados de la variable de control; en nuestro ejempl

Bucle For con tres argumentos en range(x, y, z)
El primer argumento pasado a la función range() nos dice cual es el número de inicio de la secuencia (por lo tanto 2 en la output). 
El segundo argumento le dice a la función dónde detener la secuencia (la función genera números hasta el número indicado por el segundo argumento, pero no lo incluye). 
El tercer argumento indica el paso, que en realidad significa la diferencia entre cada número en la secuencia de números generados por la función.

Sentencias BREAK y CONTINUE 
break - sale del bucle inmediatamente, e incondicionalmente termina la operación del bucle; el programa comienza a ejecutar la instrucción más cercana después del cuerpo del bucle.
continue - se comporta como si el programa hubiera llegado repentinamente al final del cuerpo; el siguiente turno se inicia y la expresión de condición se prueba de inmediato.

Los bucles while y for también pueden tener una cláusula else en Python. 
La cláusula else se ejecuta después de que el bucle finalice su ejecución siempre y cuando no haya terminado con break,